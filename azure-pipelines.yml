trigger:
    branches:
        include:
            - master
    tags:
        include:
            - v*

strategy:
    matrix:
        linux:
            imageName: "ubuntu-22.04"
        linux-old-devtools:
            imageName: "ubuntu-22.04"
        # mac:
        #   imageName: 'macos-latest'
        windows:
            imageName: "windows-latest"

pool:
    vmImage: $(imageName)

steps:
    - task: NodeTool@0
      inputs:
          versionSpec: "20.x"
      displayName: "Install Node.js"

    - task: CmdLine@2
      inputs:
          script: |
              tzutil /s "GMT Standard Time"
      displayName: "Set the timezone for Windows"
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - bash: |
          sudo add-apt-repository ppa:cran/libgit2
          sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
          sudo add-apt-repository ppa:marutter/rrutter
          sudo add-apt-repository ppa:marutter/c2d4u
          sudo apt-get update
          sudo apt-get install libcurl4-gnutls-dev libssh2-1-dev libgit2-dev libxml2-dev
          sudo apt-get install r-cran-devtools
          sudo Rscript -e "install.packages('mockery',repos = 'http://cran.us.r-project.org')"
      displayName: "Install devtools for Linux"
      condition: eq(variables['Agent.JobName'], 'Job linux')

    - bash: |
          sudo add-apt-repository ppa:cran/libgit2
          sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
          sudo add-apt-repository ppa:marutter/rrutter
          sudo add-apt-repository ppa:marutter/c2d4u
          sudo apt-get update
          sudo apt-get install libcurl4-gnutls-dev libssh2-1-dev libgit2-dev libxml2-dev
          sudo Rscript -e "install.packages('remotes', repos = 'http://cran.us.r-project.org')"
          sudo Rscript -e "remotes::install_version('devtools', version='2.3.2')"
          sudo Rscript -e "install.packages('mockery', repos = 'http://cran.us.r-project.org')"
      displayName: "Install previous version of devtools for Linux"
      condition: eq(variables['Agent.JobName'], 'Job linux-old-devtools')

    - bash: |
          Rscript -e "install.packages('devtools', repos = 'http://cran.us.r-project.org', type='binary');install.packages('mockery',repos = 'http://cran.us.r-project.org', type='binary');install.packages('httr',repos = 'http://cran.us.r-project.org', type='binary')"
      displayName: "Install devtools"
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - bash: |
          Rscript -e "install.packages('devtools', repos = 'http://cran.us.r-project.org', type='mac.binary');install.packages('mockery',repos = 'http://cran.us.r-project.org', type='mac.binary')"
      displayName: "Install devtools"
      condition: eq(variables['Agent.OS'], 'Darwin')

    - bash: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
      displayName: Start xvfb
      condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

    - bash: |
          echo ">>> Compile vscode-test"
          npm install && npm run build
          echo ">>> Show file directory"
          ls
          echo ">>> Run integration test"
          npm test
      displayName: Run Tests
      env:
          DISPLAY: ":99.0"

    - bash: |
          echo ">>> Publish"
          npm run publish
      displayName: Publish
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'),  eq(variables['Agent.JobName'], 'Job linux'))
      env:
          VSCE_PAT: $(VSCE_PAT)
